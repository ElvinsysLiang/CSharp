#region << 版 本 注 释 >>
/*----------------------------------------------------------------
 * 项目名称 ：CP03Operator
 * 项目描述 ：运算符的练习文档
 * 类 名 称 ：Program
 * 类 描 述 ：运算符的练习文档
 * 命名空间 ：CP03Operator
 * 机器名称 ：DESKTOP-UPPQS8L
 * CLR 版本 ：4.0.30319.42000
 * 作    者 ：Elvinsys
 * 创建时间 ：2020-02-28 14:28:21
 * 更新时间 ：2020-03-08 19:36:08
 * 版 本 号 ：v1.0.0.0
 ****************************************************************
 * Copyright @ Elvinsys 2020. All rights reserved.
 ****************************************************************
----------------------------------------------------------------*/
#endregion

/*
 *  C#中包含六种运算符：数学运算符/赋值运算符/比较运算符/逻辑运算符/逻辑运算符/位运算符/三目运算符
 */

using System;
using CP00Forms;

namespace CP03Operator
{
    class Program
    {
        static void Main(string[] args)
        {
            #region CP03_01：5种基本数学运算符（+，-，*，/，%）
            /*
             *  例程编号：CP03_01
             *  摘要：
             *      5种数学运算符（+，-，*，/，%）
             *  说明：
             *      1）
             *  步骤：
             *      1）
             *  变量：
             *      修饰符     变量类型         变量名     备注
             *  方法：
             *      修饰符         返回值类型    方法名            参数类型    备注
             */
            #endregion
            //Forms.Line("CP03_01");
            //Op01Arith.CP03_01();

            #region CP03_02：另外2种数学运算符：自增和自减运算符（++，--）
            /*
             *  例程编号：CP03_02
             *  摘要：
             *      另外2种数学运算符：自增和自减运算符（++，--）
             *  说明：
             *      1）
             *  步骤：
             *      1）
             *  变量：
             *      修饰符     变量类型         变量名     备注
             *                  int             var
             *  方法：
             *      修饰符         返回值类型    方法名            参数类型    备注
             */
            #endregion
            //Forms.Line("CP03_02");
            //Op01Arith.CP03_02();

            #region CP03_03：自增自减练习：看代码猜数值
            /*
             *  例程编号：CP03_04
             *  摘要：
             *      自增自减练习：看代码猜数值
             *  说明：
             *      1）num1 = 3, num2 = 4;
             *          num3 = ++num1;
             *          num4 = num2--;
             *  步骤：
             *      1）
             *  变量：
             *      修饰符     变量类型     变量名     备注
             *                  int         num1
             *                  int         num2
             *                  int         num3
             *                  int         num4
             *  方法：
             *      修饰符         返回值类型    方法名            参数类型    备注
             */
            #endregion
            //Forms.Line("CP03_03");
            //Op01Arith.CP03_03();

            #region CP03_04：用来连接字符串的加法运算符
            /*
             *  例程编号：CP03_04
             *  摘要：
             *      用来连接字符串的加法运算符
             *  说明：
             *      1）加法运算符除了用来做加法运算以外，还可用作连接两个字符串
             *      2）在控制台打印的时候，碰到字符串前，加法运算符起到算术运算的作用
             *          但，当其前面或后面出现字符串是，加法运算符起到连接字符串的作用
             *  步骤：
             *      1）控制台输出("你的名字叫" + "李博士")
             *      2）控制台输出("我的名字叫" + name)
             *      3）控制台输出(5 + 5)
             *      4）控制台输出("狗狗" + 5 + "岁了")
             *  变量：
             *      修饰符      变量类型         变量名     备注
             *                  string          name
             *  方法：
             *      修饰符         返回值类型    方法名            参数类型    备注
             */
            #endregion
            //Forms.Line("CP03_04");
            //Op01Arith.CP03_04();

            #region CP03_05：交换两个整形变量值的三种方法
            /*
             *  例程编号：CP03_05
             *  摘要：
             *      交换两个整形变量值的三种方法
             *  说明：
             *      1）  用第三个变量交换数据
             *      2）  只用原来的两个变量交换数据
             *  步骤：
             *      1）  利用第三个变量
             *      2）  利用加减
             *      3）  利用异或
             *  变量：
             *      修饰符     变量类型      变量名       备注
             *                  int         iVar1       第一个整形变量
             *                  int         iVar2       第二个整形变量
             *                  int         iTemp       用于暂存数据的变量
             *  方法：
             *      修饰符         返回值类型    方法名            参数类型    备注
             *                      void        Method_1        void        
             *                      void        Method_2        void
             *                      void        Method_3        void
             */
            #endregion
            //Forms.Line("CP03_05");
            //Op01Arith.CP03_05();

            #region CP03_06：用户输入x天，计算出是几周零几天
            /*
             *  例程编号：CP03_06
             *  摘要：
             *      用户输入x天，计算出是几周零几天
             *  说明：
             *      1）接收用户的天数
             *      2）对天数的处理，并把结果输出到控制台上
             *          iDay = x % 7;
             *          iWeek = x / 7;
             *  步骤：
             *      1）处理天数，算出几周几天，输出到控制台上
             *  变量：
             *      修饰符     变量类型      变量名       备注
             *                  int         iDay
             *  方法：
             *      修饰符      返回值类型      方法名           参数类型    备注
             *                  void           DayWeek          int 
             */
            #endregion
            //Forms.Line("CP03_06");
            //Op01Arith.CP03_06();

            #region CP03_07：用户输入x秒，计算出几天几小时几分几秒
            /*
             *  例程编号：CP03_07
             *  摘要：
             *      用户输入x秒，计算出几天几小时几分几秒
             *  说明：
             *      1）接收用户的秒数
             *      2）对秒数的处理，并把结果输出到控制台上
             *          iSec = x % 60;
             *          iMin = x / 60 % 60;
             *          iHour = x / (60*60) % 24;
             *          iDay = x / (60*60*24)
             *          
             *  步骤：
             *      1）处理秒数，算出几天几小时几分几秒，输出到控制台上
             *  变量：
             *      修饰符     变量类型      变量名       备注
             *                  int         iX
             *  方法：
             *      修饰符         返回值类型       方法名          参数类型    备注
             *                      void           DyHrMnSc          int
             */
            #endregion
            //Forms.Line("CP03_07");
            //Op01Arith.CP03_07();

            #region CP03_09：6种赋值运算符（=、+=、-=、*=、/=、%=）
            /*
             *  例程编号：CP03_09
             *  摘要：
             *      6种赋值运算符（=、+=、-=、*=、/=、%=）
             *  说明：
             *      1）
             *  步骤：
             *      1）
             *  变量：
             *      修饰符     变量类型      变量名       备注
             *  方法：
             *      修饰符         返回值类型    方法名            参数类型    备注
             */
            #endregion
            //Forms.Line("CP03_08");
            //Op02Assignment.CP03_09();

            #region CP03_10：6种比较运算符（==、！=、>、>=、<、<=）
            /*
             *  例程编号：CP03_10
             *  摘要：
             *      6种比较运算符（==、！=、>、>=、<、<=）
             *  说明：
             *      1）返回的是一个bool值（真 或者 假）
             *  步骤：
             *      1）
             *  变量：
             *      修饰符     变量类型      变量名       备注
             *                  int         iVar1
             *                  int         iVar2
             *  方法：
             *      修饰符         返回值类型    方法名            参数类型    备注
             */
            #endregion
            //Forms.Line("CP03_10");
            //Op03Comparison.CP03_10();

            #region CP03_11：6种逻辑运算符（&、&&、|、||、！、^）
            /*
             *  例程编号：CP03_11
             *  摘要：
             *      6种逻辑运算符（&、&&、|、||、！、^）
             *  说明：
             *      1）&和|：每个表达式都会执行
             *         &&和||：短路效应，只要其中一个满足整个逻辑表达式的条件，往后就不会执行
             *         &&：若运算符左侧操作数（表达式）为false，则整个表达式的结果为false，不会执行右侧表达式
             *         ||：若运算符左侧操作数（表达式）为true，则整个表达式的结果为true，不会执行右侧表达式
             *      2）观察每个逻辑表达式的运算结果
             *  步骤：
             *      1）
             *  变量：
             *      修饰符          变量类型         变量名         备注
             *                      int             iVar1
             *                      int             iVar2
             *                      int             iVar3
             *  方法：
             *      修饰符         返回值类型    方法名            参数类型    备注
             */
            #endregion
            //Forms.Line("CP03_12");
            //Op04Logical.CP03_12();

            #region CP03_12：4种位运算符（&、|、!、^）
            /*
             *  例程编号：CP03_12
             *  摘要：
             *      4种位运算符（&、|、^、~）
             *  说明：
             *      1）意义
             *          &   两个二进制按位做与运算
             *          |   两个二进制按位做或运算
             *          ^   两个二进制按位做异或运算
             *          ~   一个二进制按位取反
             *      2）一个变量对另一个变量异或两次，结果不变
             *  步骤：
             *      1）
             *  变量：
             *      修饰符     变量类型      变量名       备注
             *                  int         iVar1
             *                  int         iVar2
             *  方法：
             *      修饰符         返回值类型    方法名            参数类型    备注
             */
            #endregion
            //Forms.Line("CP03_12");
            //Op05Bit.CP03_12();

            #region CP03_13：三目运算符( ? : )
            /*
             *  例程编号：CP03_13
             *  摘要：
             *      三目运算符( ? : )
             *  说明：
             *      1）(条件是否满足？满足了就执行表达式1：不满足就执行表达式2）
             *  步骤：
             *      1）求两个整数最大值
             *      2）求三个整数最大值，方法一（用中间变量）
             *      3）求三个整数最大值，方法二
             *      4）求三个整数最大值，方法三
             *      5）做条件判断，用于后续分支执行的判定条件
             *  变量：
             *      修饰符     变量类型      变量名       备注
             *                  int         iVar1
             *                  int         iVar2
             *                  int         iVar3
             *  方法：
             *      修饰符      返回值类型    方法名          参数类型1  参数类型2  参数类型3   备注
             *                  int          TeryTwoInt      int        int       int
             *                  int          TeryThreeIntM1  int        int       int
             *                  int          TeryThreeIntM2  int        int       int
             *                  int          TeryThreeIntM3  int        int       int
             *                  bool         TeryFlag        int        int
             */
            #endregion
            //Forms.Line("CP03_13");
            //Op06Ternary.CP03_13();
        }
    }
}
